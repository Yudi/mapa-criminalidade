services:
  frontend:
    build: ../frontend
    networks:
      - traefik
      - default
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik"
      - "traefik.http.routers.frontend.rule=Host(`criminalidade.yudi.com.br`)"
      - "traefik.http.services.frontend-svc.loadbalancer.server.port=80"
      - "traefik.http.routers.frontend.entrypoints=web, websecure"
      - "traefik.http.routers.frontend.service=frontend-svc"
      - "traefik.http.routers.frontend.tls=true"
      - "traefik.http.routers.frontend.tls.certResolver=letsencrypt"

  backend:
    build: ../backend
    networks:
      - traefik
      - default
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik"
      - "traefik.http.routers.backend.rule=Host(`api-criminalidade.yudi.com.br`)"
      - "traefik.http.services.backend-svc.loadbalancer.server.port=8080"
      - "traefik.http.routers.backend.entrypoints=web, websecure"
      - "traefik.http.routers.backend.service=backend-svc"
      - "traefik.http.routers.backend.tls=true"
      - "traefik.http.routers.backend.tls.certResolver=letsencrypt"

  db:
    image: postgis/postgis:latest
    container_name: postgis_db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"
    volumes:
      - ./postgis_data:/var/lib/postgresql/data
      - ./example.csv:/tmp/example.csv
    networks:
      - default
    restart: unless-stopped

networks:
  postgis_network:
    driver: bridge
